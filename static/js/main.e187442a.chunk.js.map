{"version":3,"sources":["logo.svg","TodoItem.js","constants/style.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","theme","colors","red_300","size","$isDone","TodoButtonWrapper","Button","button","RedButton","h2","p","TodoItem","className","todo","handleDeleteTodo","handleTogglerIsDone","data-todo-id","id","isDone","content","onClick","App","useState","todos","setTodos","value","setValue","filter","map","type","placeholder","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","red_400","red_500","document","getElementById"],"mappings":"oPAAe,I,YCYTA,EAAkBC,IAAOC,IAAV,mMAWfC,EAAcF,IAAOC,IAAV,iFACN,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAGnC,SAAAH,GAAK,MAAmB,OAAfA,EAAMI,MAAN,cAIT,SAAAJ,GAAK,OAAIA,EAAMK,SAAN,8CAKPC,EAAoBT,IAAOC,IAAV,0BAEjBS,EAASV,IAAOW,OAAV,0OCtCe,wCACA,0CD0DrBC,EAAYZ,YAAOU,EAAPV,CAAH,6CAKMA,IAAOa,GAAV,0IAaEb,IAAOc,EAAV,yFAYF,SAASC,EAAT,GAAsF,IAAjEC,EAAgE,EAAhEA,UAAWT,EAAqD,EAArDA,KAAMU,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,iBAAkBC,EAAuB,EAAvBA,oBAQzE,OACI,eAACpB,EAAD,CAAiBiB,UAAWA,EAAWI,eAAcH,EAAKI,GAA1D,UACI,cAACnB,EAAD,CAAaM,QAASS,EAAKK,OAAQf,KAAMA,EAAzC,SAAgDU,EAAKM,UACrD,eAACd,EAAD,WACI,cAACC,EAAD,CAAQc,QAXO,WACvBL,EAAoBF,EAAKI,KAUjB,SACCJ,EAAKK,OAAS,qBAAQ,uBAEvB,cAACV,EAAD,CAAWY,QAAS,WACEP,EAAKI,GAXnCH,EAAiBD,EAAKI,KAUd,gCEpGMrB,YAAOe,EAAPf,CAAH,kDAAnB,IAGIqB,EAAK,EAkDMI,MAjDf,WAAgB,IAAD,EACaC,mBAAS,CACjC,CAACL,GAAI,EAAGE,QAAS,UAAWD,QAAQ,GACpC,CAACD,GAAI,EAAGE,QAAS,WAAYD,QAAQ,KAH1B,mBACNK,EADM,KACCC,EADD,OAMaF,mBAAS,IANtB,mBAMNG,EANM,KAMCC,EAND,KAkBPZ,EAAmB,SAAAG,GACvBO,EAASD,EAAMI,QAAO,SAAAd,GAAI,OAAIA,EAAKI,KAAOA,OAOtCF,EAAsB,SAAAE,GAC1BO,EAASD,EAAMK,KAAI,SAAAf,GACf,OAAGA,EAAKI,IAAMA,EAAWJ,EAClB,2BACFA,GADL,IAEEK,QAASL,EAAKK,cAOtB,OACE,sBAAKN,UAAU,MAAf,UACE,uBAAOiB,KAAK,OAAOC,YAAY,OAAOL,MAAOA,EAAOM,SAlB9B,SAACC,GACzBN,EAASM,EAAEC,OAAOR,UAkBhB,wBAAQL,QAjCc,WACxBI,EAAS,GAAD,mBAAMD,GAAN,CACN,CACEN,KACAE,QAASM,MAEbC,EAAS,IACTT,KA0BE,sBAEEM,EAAMK,KAAK,SAAAf,GAAI,OAAI,cAACF,EAAD,CAAwBE,KAAMA,EAAMC,iBAAkBA,EAAkBC,oBAAqBA,GAA9EF,EAAKI,WCvChCiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCSdQ,IAASC,OACP,cAAC,IAAD,CAAe5C,MATH,CACZC,OAAQ,CACNC,QAAS,UACT2C,QAAS,UACTC,QAAS,YAKX,SACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.e187442a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport react from 'react'\nimport styled from 'styled-components'\nimport { MEDIA_QUERY_MD, MEDIA_QUERY_LG } from './constants/style'\n\n\nconst titleStyle = {\n  color: 'red',\n  textAlign: 'center'\n}\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border: 1px solid black;\n  & + & {\n    margin-top: 12px; \n  }\n`\n\nconst TodoContent = styled.div`\n  color: ${props => props.theme.colors.red_300 };\n  font-size: 12px;\n\n  ${props => props.size === 'XL' && `\n  \n  `}\n\n  ${props => props.$isDone && `\n    text-decoration: line-through;\n  `}\n`\n\nconst TodoButtonWrapper = styled.div``\n\nconst Button = styled.button`\n  padding: 4px;\n  color: black;\n  font-size: 20px;\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 16px;\n  }\n  ${MEDIA_QUERY_LG} {\n    font-size: 12px;\n  }\n\n  &:hover {\n    color: red;\n  }\n\n  & + & {\n    margin-left: 4px; \n  }\n`\n\nconst RedButton = styled(Button)`\n  color: red;  \n`\n\n\nconst TitleWrapper = styled.h2`\n  display: flex;\n  color: blue;\n\n  &:hover {\n    color: red;\n  }\n  \n  span {\n    color: yellow;\n  }\n`\n\nconst Description = styled.p`\n  color: red;\n  padding: 20px;\n  border: 1px solid black;\n`\n\nfunction Title({ size }) {\n  return (\n    <TitleWrapper>hello<span>yooo</span></TitleWrapper>\n  )\n}\n\nexport default function TodoItem ({ className, size, todo, handleDeleteTodo, handleTogglerIsDone }) {\n    const handleTogglerClick = () => {\n        handleTogglerIsDone(todo.id)\n    }\n    const handleDeleteClick = () => {\n        handleDeleteTodo(todo.id)\n    }\n\n    return (\n        <TodoItemWrapper className={className} data-todo-id={todo.id}>\n            <TodoContent $isDone={todo.isDone} size={size}>{todo.content}</TodoContent>\n            <TodoButtonWrapper>\n                <Button onClick={handleTogglerClick}>\n                {todo.isDone ? '未完成' : '已完成'}\n                </Button>\n                <RedButton onClick={() => {\n                    handleDeleteClick(todo.id)\n                 }}>刪除</RedButton>\n            </TodoButtonWrapper>\n        </TodoItemWrapper>\n  )\n}","export const MEDIA_QUERY_MD = `@media screen and (min-width: 768px) `\nexport const MEDIA_QUERY_LG = `@media screen and (min-width: 1000px) `","import styled from 'styled-components'\nimport TodoItem from './TodoItem'\nimport { useState, useRef } from 'react'\n\nconst BlackTodoItem = styled(TodoItem)`\n  background: black;\n`\nlet id = 3\nfunction App() {\n  const [todos, setTodos] = useState([\n    {id: 1, content: 'example', isDone: true},\n    {id: 2, content: 'not done', isDone: false}\n  ])  // 這個叫做一個 hook\n\n  const [value, setValue] = useState('')\n\n  const handleButtonClick = () => {\n    setTodos([ ...todos, \n      {\n        id,\n        content: value\n      }])\n    setValue('')\n    id++\n  }\n\n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleTogglerIsDone = id => {\n    setTodos(todos.map(todo => {\n        if(todo.id != id) return todo\n        return {\n          ...todo,\n          isDone: !todo.isDone\n        }\n      }\n    ))\n  }\n\n  const titleSize = \"XL\"\n  return (\n    <div className=\"App\">\n      <input type=\"text\" placeholder=\"todo\" value={value} onChange={handleInputChange}/>\n      <button onClick={handleButtonClick}>Add todo</button>\n      {\n        todos.map( todo => <TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleTogglerIsDone={handleTogglerIsDone}/>)\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components'\nimport reactDom from 'react-dom';\n\nconst theme = {\n  colors: {\n    red_300: '#d42a2a',\n    red_400: '#a52424',\n    red_500: '#7d1c1c',\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}